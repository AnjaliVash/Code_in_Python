The count-and-say sequence is a sequence of digit strings defined by the recursive formula:

countAndSay(1) = "1"
countAndSay(n) is the way you would "say" the digit string from countAndSay(n-1), which is then converted into a different digit string.
To determine how you "say" a digit string, split it into the minimal number of groups so that each group is a contiguous section all of the same character. Then for each group, say the number of characters, then say the character. To convert the saying into a digit string, replace the counts with a number and concatenate every saying.

For example, the saying and conversion for digit string "3322251":

Given a positive integer n, return the nth term of the count-and-say sequence.

 
 
  def countAndSay(self, n: int) -> str:
        st="1"
        while(True):
            if(n==1):
                return(st)
            p=""
            count=0
            k=st[0]
            for i in st:
                if k!=i:
                    p+=str(count)+k
                    k=i
                    count=1
                else:
                    count+=1
            p+=str(count)+k
            #print(p,n)
            n-=1
            st=p
